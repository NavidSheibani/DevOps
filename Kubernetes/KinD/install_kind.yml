
---
- name: Install Docker, kubectl, KinD, and Krew on Ubuntu
  hosts: all
  become: true
  tasks:

    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Install ca-certificates and curl
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Install necessary directory for Docker keyring
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository to APT sources
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update apt package cache after adding Docker repository
      apt:
        update_cache: yes

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Install docker-compose if not present
      apt:
        name: docker-compose
        state: present

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: docker_compose_version
      changed_when: false

    - name: Install kubectl
      shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
        echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        kubectl version --client
      args:
        creates: /usr/local/bin/kubectl

    - name: Install KinD
      shell: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.24.0/kind-$(uname)-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        kind version
      args:
        creates: /usr/local/bin/kind

    - name: Enable bash completion for KinD
      shell: |
        kind completion bash > ~/.kind-completion
        echo "source ~/.kind-completion" >> ~/.bashrc
        source ~/.bashrc
      when: ansible_shell_type == "bash"

    - name: Install Krew
      shell: |
        set -x; cd "$(mktemp -d)" &&
        OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
        ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
        KREW="krew-${OS}_${ARCH}" &&
        curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
        tar zxvf "${KREW}.tar.gz" &&
        ./"${KREW}" install krew
      args:
        creates: "{{ ansible_env.HOME }}/.krew"

    - name: Add Krew to PATH
      shell: |
        export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
      environment:
        KREW_ROOT: "{{ ansible_env.HOME }}/.krew"
      args:
        executable: /bin/bash

    - name: Install kubectx and kubens using Krew
      shell: |
        kubectl krew install ctx
        kubectl krew install ns
      when: ansible_facts.packages['kubectl']['version'] is defined

# Author : NavidSheibani